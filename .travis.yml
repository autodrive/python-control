sudo: false
language: generic

cache:
  apt: true
  pip: true
  directories:
    - $HOME/.cache/pip
    - $HOME/.local

# Test against multiple version of SciPy, with and without slycot
#
# Because there were significant changes in SciPy between v0 and v1, we 
# test against both of these using the Travis CI environment capability
#
# We also want to test with and without slycot

os:
  - linux
  - osx

env:
  matrix:
    - CONDA_PYTHON=3.6 SCIPY=scipy            SLYCOT=slycot   # default, with slycot
    - CONDA_PYTHON=3.6 SCIPY=scipy            SLYCOT=         # default, w/out slycot
    - CONDA_PYTHON=3.6 SCIPY="scipy==0.19.1"  SLYCOT=         # legacy support, w/out slycot
    - CONDA_PYTHON=3.5 SCIPY=scipy            SLYCOT=slycot
    - CONDA_PYTHON=3.5 SCIPY=scipy            SLYCOT=
    - CONDA_PYTHON=3.5 SCIPY="scipy==0.19.1"  SLYCOT=
    - CONDA_PYTHON=2.7 SCIPY=scipy            SLYCOT=slycot
    - CONDA_PYTHON=2.7 SCIPY=scipy            SLYCOT=
    - CONDA_PYTHON=2.7 SCIPY="scipy==0.19.1"  SLYCOT=

# Install gfortran for testing slycot; use apt-get instead of conda in
# order to include the proper CXXABI dependency (updated in GCC 4.9)

# Install display manager to allow testing of plotting functions

addons:
  apt:
    packages:
      - xvfb
      - gfortran

# install required system libraries
before_install:
  # start display manager to allow testing of plotting functions
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export DISPLAY=:99.0;
      sh -e /etc/init.d/xvfb start;
    elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export MPLBACKEND="TkAgg";
      ( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok; ) &
    fi;
  # use miniconda to install numpy/scipy, to avoid lengthy build from source
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ "$CONDA_PYTHON" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      if [[ "$CONDA_PYTHON" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi;
    fi;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda config --add channels python-control
  - conda info -a
  - conda create -q -n test-environment python="$CONDA_PYTHON" pip coverage
  - source activate test-environment
  # Install openblas if slycot is being used
  - if [[ "$SLYCOT" != "" ]]; then
        conda install openblas;
    fi
  # Make sure to look in the right place for python libraries (for slycot)
  - export LIBRARY_PATH="$HOME/miniconda/envs/test-environment/lib"
  # coveralls not in conda repos => install via pip instead
  - pip install coveralls

# Install packages
install:
  # Install packages needed by python-control
  - conda install $SCIPY matplotlib
  # Build slycot from source
  # For python 3, need to provide pointer to python library
  #! git clone https://github.com/repagh/Slycot.git slycot;
  - if [[ "$SLYCOT" != "" ]]; then
      git clone https://github.com/python-control/Slycot.git slycot;
      cd slycot; python setup.py install; cd ..;
    fi

# command to run tests
script:
  - 'if [ $SLYCOT != "" ]; then python -c "import slycot"; fi'
  - coverage run setup.py test

after_success:
  - coveralls
